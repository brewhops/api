{
  "name": "NinkasiServer",
  "version": "0.0.1",
  "description": "An express based REST API for tracking brewing data",
  "main": "./src/index.js",
  "engines": {
    "node": "11.2.0"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha --reporter spec 'src/test/components/*.js' --file src/test/dbSetup.js --exit",
    "lint": "./node_modules/.bin/eslint ./**/ --ext js --ignore-pattern 'node_modules/'",
    "lint-fix": "./node_modules/.bin/eslint ./**/ --ext js --ignore-pattern 'node_modules/' --fix",
    "start": "node index.js",
    "dev": "PGUSER=api PGDATABASE=brewhops PGPASSWORD=mypassword PORT=1234 docker-compose -f DEV.docker-compose.yaml up",
    "dev-build": "PGUSER=api PGDATABASE=brewhops PGPASSWORD=mypassword PORT=1234 docker-compose -f DEV.docker-compose.yaml build",
    "dev-clean": "PGUSER=api PGDATABASE=brewhops PGPASSWORD=mypassword PORT=1234 docker-compose -f DEV.docker-compose.yaml rm -sf; docker image rm brewhops-api_dev; docker volume rm brewhops-postgres-data_dev;",
    "dev-psql": "PGUSER=api PGPASSWORD=mypassword PGDATABASE=brewhops; docker run -it --rm --network=${PWD##*/}_default -e PGUSER=${PGUSER} -e PGDATABASE=${PGDATABASE} -e PGPASSWORD=${PGPASSWORD} -e PGHOST=database postgres psql",
    "prod": "PGUSER=${PGUSER:=api} PGDATABASE=${PGDATABASE:=brewhops} PGPASSWORD=${PGPASSWORD:=mypassword} docker-compose -f PROD.docker-compose.yaml up",
    "prod-build": "PGUSER=${PGUSER:=api} PGDATABASE=${PGDATABASE:=brewhops} PGPASSWORD=${PGPASSWORD:=mypassword} docker-compose -f PROD.docker-compose.yaml build",
    "prod-clean": "PGUSER=${PGUSER:=api} PGDATABASE=${PGDATABASE:=brewhops} PGPASSWORD=${PGPASSWORD:=mypassword} docker-compose -f PROD.docker-compose.yaml rm -sf; docker image rm brewhops-api; docker volume rm brewhops-postgres-data;",
    "prod-psql": "PGUSER=${PGUSER:=api} PGPASSWORD=${PGPASSWORD:=mypassword} PGDATABASE=${PGDATABASE:=brewhops}; docker run -it --rm --network=${PWD##*/}_default -e PGUSER=${PGUSER} -e PGDATABASE=${PGDATABASE} -e PGPASSWORD=${PGPASSWORD} -e PGHOST=database postgres psql"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ConnorChristensen/NinkasiServer.git"
  },
  "author": "Connor Christensen",
  "bugs": {
    "url": "https://github.com/ConnorChristensen/NinkasiServer/issues"
  },
  "homepage": "https://github.com/ConnorChristensen/NinkasiServer#readme",
  "devDependencies": {
    "chai": "^4.1.2",
    "eslint": "^4.19.1",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-node": "^6.0.1",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-standard": "^3.1.0",
    "knex": "^0.14.6",
    "mocha": "^5.2.0",
    "nodemon": "^1.17.5",
    "sinon": "^6.0.0",
    "supertest": "^3.1.0"
  },
  "dependencies": {
    "bcrypt": "^2.0.1",
    "boom": "^7.2.0",
    "chai-as-promised": "^7.1.1",
    "command-line-args": "^5.0.2",
    "cors": "^2.8.4",
    "dotenv": "^5.0.1",
    "express": "^4.16.3",
    "express-validation": "^1.0.2",
    "is": "^3.2.1",
    "joi": "^13.4.0",
    "jsonwebtoken": "^8.3.0",
    "pg": "^7.4.3",
    "uuid": "^3.2.1"
  }
}
